name: container-image

on:
  push:
    branches:
      - "building-and-testing-dotnet"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      # Critical for Azure (https://paulyu.dev/article/pushing-multi-arch-container-images-guide/)
      id-token: write
      # Critical for Azure (https://paulyu.dev/article/pushing-multi-arch-container-images-guide/)
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: "Azure Login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build WebApplication1 image and push to registry
        uses: docker/build-push-action@v5
        with:
          # This might be critical:
          # I want to build, publish, and dockerbuild only the app, not the whole solution.
          # So I ASSUME setting the context to the directory of the project will limit the
          # build scope to the csproj inside.
          context: "{{defaultContext}}:WebApplication1"
          # Azure container apps are AMD64 so being explicit
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/webapplication1:${{ github.sha }}
          labels: |
            xxx1=yyy1
            xxx2=yyy2
            flerg=snett
      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/webapplication1:7a2541d27c5031f2373519af04cbfb8cde64af30
          containerAppName: test20240106
          resourceGroup: test20240106
